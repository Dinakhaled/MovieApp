{"version":3,"sources":["components/title/Title.js","components/spinner/Spinner.js","assets/images/not-found.png","assets/images/image-fail.png","components/rating/Rating.js","components/empty/Empty.js","components/PageTitle/PageTitle.js","components/card/Card.js","services/index.js","components/pagination/Pagination.js","components/sort/Sort.js","containers/CardsGrid/CardsGrid.js","components/image/Image.js","components/text/Text.js"],"names":["Title","main","sub","size","Fragment","className","Spinner","animation","variant","module","exports","Rating","Rate","text","emptySymbol","icon","emptyStar","fullSymbol","faStar","initialRating","readonly","Empty","props","title","location","history","src","notFoundImg","alt","pathname","to","faHome","iconMargin","order","theme","content","PageTitle","CardImage","React","lazy","Card","scrollToTop","scroll","state","isLoaded","this","list","map","id","poster_path","vote_average","key","onClick","fallback","Body","Component","pushToUrlNewParam","page","push","search","Pagination","handleClick","next","includes","fetchRecommendedMoviesRequest","replace","split","fetchMoviesReq","with_genres","with_cast","tap","api","query","sort_by","sortKey","renderNextBtn","currentPage","movies","Button","faArrowRight","renderBackBtn","faArrowLeft","isMorePage","total_pages","isBack","classMap","connect","currentTap","searchKeyword","sortBy","sortingList","value","label","Sort","handleChange","e","setState","selected","click","options","colors","primary25","primary","onChange","CardsGrid","sort","type","results","length","Image","useState","loaded","setLoading","imageFail","onLoad","Text","p"],"mappings":"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","file":"static/js/1.066e19b6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Title.scss\";\r\n\r\nconst Title = ({ main, sub, size }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {size === \"lg\" ? (\r\n        <div className=\"mb-xs-20\">\r\n          <div>\r\n            <h1 className=\"h1-2-light title\">{main}</h1>\r\n            <h2 className=\"title title__sub\">{sub}</h2>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"mb-xs-40\">\r\n          <div>\r\n            <h1 className=\"h1-light title mb-1\">{main}</h1>\r\n            <h3 className=\"title\">{sub}</h3>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport { Spinner as BootStrapSpinner } from \"react-bootstrap\";\r\nimport \"./Spinner.scss\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <BootStrapSpinner animation=\"border\" variant=\"primary\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","module.exports = __webpack_public_path__ + \"static/media/not-found.b0286f2b.png\";","module.exports = __webpack_public_path__ + \"static/media/image-fail.6beea696.png\";","import React from \"react\";\r\nimport Stars from \"react-rating\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faStar as emptyStar } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Rating.scss\";\r\n\r\nconst Rating = ({ Rate, text, className }) => {\r\n  return (\r\n    <div className={`${className} ${text ? \"d-flex align-items-center\" : \"\"}`}>\r\n      <Stars\r\n        className=\"rating\"\r\n        emptySymbol={\r\n          <FontAwesomeIcon className=\"fontAwesome\" icon={emptyStar} size=\"1x\" />\r\n        }\r\n        fullSymbol={\r\n          <FontAwesomeIcon className=\"fontAwesome\" icon={faStar} size=\"1x\" />\r\n        }\r\n        initialRating={Rate}\r\n        readonly\r\n      />\r\n      {text ? <p className=\"m-0 small-bold text-primary\">{text}</p> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport Button from \"../buttons/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport history from \"../../routes/History\";\r\nimport notFoundImg from \"../../assets/images/not-found.png\";\r\n\r\nconst Empty = props => {\r\n  const { title } = props;\r\n  const { location } = history;\r\n  return (\r\n    <div className=\"text-center d-flex align-items-center justify-content-center h-100 flex-column\">\r\n      <h1 className=\"h1-2-light\">Sorry!</h1>\r\n      <h2 className=\"h2-2\">{title}</h2>\r\n      <img src={notFoundImg} className=\"w-50 mb-4\" alt=\"not-found\" />\r\n      {location.pathname === \"/\" ? null : (\r\n        <Link to=\"/MovieApp\" className=\"d-flex justify-content-center\">\r\n          <Button\r\n            icon={faHome}\r\n            iconMargin=\"l\"\r\n            order=\"1\"\r\n            theme=\"primary\"\r\n            content=\"Home\"\r\n          />\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Empty;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst PageTitle = ({ title }) => {\r\n  var defaultTitle = \"Movies\";\r\n  return (\r\n    <Helmet>\r\n      <title>{title ? title : defaultTitle}</title>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { Component, Suspense } from \"react\";\r\nimport { Card as BootStrapCard } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Rating from \"../rating/Rating\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport \"./Card.scss\";\r\nconst CardImage = React.lazy(() => import(\"../cardImage/CardImage\"));\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: true\r\n    };\r\n  }\r\n\r\n  scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.list &&\r\n          this.props.list.map(({ title, id, poster_path, vote_average }) => {\r\n            return (\r\n              <Link\r\n                to={`/MovieApp/movie/${id}`}\r\n                key={id}\r\n                className=\"card-space\"\r\n                onClick={this.scrollToTop()}\r\n              >\r\n                <BootStrapCard className=\"border-0 card text-center d-flex align-items-center\">\r\n                  <Suspense fallback={<Spinner />}>\r\n                    <CardImage src={poster_path} />\r\n                  </Suspense>\r\n                  <BootStrapCard.Body>\r\n                    <BootStrapCard.Title>\r\n                      <h2 className=\"h2-light card__title\">{title}</h2>\r\n                    </BootStrapCard.Title>\r\n                    <Rating Rate={(vote_average / 10) * 5} />\r\n                  </BootStrapCard.Body>\r\n                </BootStrapCard>\r\n              </Link>\r\n            );\r\n          })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import history from \"../routes/History\";\r\n\r\nexport const pushToUrlNewParam = page => {\r\n  history.push({\r\n    search: `?page=${page}`\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../buttons/Button\";\r\nimport { faArrowRight, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  currentTap,\r\n  fetchMoviesReq,\r\n  searchKeyword,\r\n  sortBy,\r\n  currentPage,\r\n  fetchRecommendedMoviesRequest\r\n} from \"../../store/actions\";\r\nimport history from \"../../routes/History\";\r\nimport { pushToUrlNewParam } from \"../../services\";\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  // pushToUrlNewParam = page => {\r\n  //   history.push({\r\n  //     search: `?page=${page}`\r\n  //   });\r\n  // };\r\n\r\n  handleClick = ({ page }, next) => {\r\n    // let currentUrlParams = new URLSearchParams(window.location.search);\r\n    // currentUrlParams.set(\"page\", this.props.movies.page);\r\n    // history.push(window.location.pathname + \"?\" + currentUrlParams.toString());\r\n    // console.log(history.location.search.split(\"=\"[1]));\r\n\r\n    // history.push({\r\n    //   search: `?page=${page + 1}`\r\n    // });\r\n    next ? pushToUrlNewParam(page + 1) : pushToUrlNewParam(page - 1);\r\n\r\n    switch (true) {\r\n      case history.location.pathname.includes(\"movie\"):\r\n        this.props.fetchRecommendedMoviesRequest(\r\n          history.location.pathname.replace(\"/\", \"\"),\r\n          {\r\n            page: history.location.search.split(\"=\")[1]\r\n          }\r\n        );\r\n        break;\r\n      case history.location.pathname.includes(\"person\"):\r\n        this.props.fetchMoviesReq(\"\", {\r\n          page: history.location.search.split(\"=\")[1],\r\n          with_genres: true,\r\n          with_cast: history.location.pathname.replace(\"/person/\", \"\")\r\n        });\r\n        break;\r\n      default:\r\n        this.props.fetchMoviesReq(this.props.tap.api, {\r\n          // page: next ? page + 1 : page - 1,\r\n          page: history.location.search.split(\"=\")[1],\r\n          with_genres:\r\n            this.props.tap.id === 1 ||\r\n            this.props.tap.id === 2 ||\r\n            this.props.tap.id === 3\r\n              ? \"\"\r\n              : this.props.tap.id,\r\n          query: this.props.search ? this.props.search : \"\",\r\n          sort_by: this.props.sortKey ? this.props.sortKey : \"\"\r\n        });\r\n    }\r\n  };\r\n\r\n  renderNextBtn = () => {\r\n    this.props.currentPage(this.props.movies.page || 1);\r\n    return (\r\n      <div onClick={() => this.handleClick(this.props.movies, true)}>\r\n        <Button\r\n          content={`page ${this.props.movies.page + 1}`}\r\n          theme=\"primary\"\r\n          icon={faArrowRight}\r\n          order=\"1\"\r\n          iconMargin=\"l\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderBackBtn = () => {\r\n    return (\r\n      <div onClick={() => this.handleClick(this.props.movies, false)}>\r\n        <Button\r\n          content={`page ${this.props.movies.page - 1}`}\r\n          theme=\"primary\"\r\n          icon={faArrowLeft}\r\n          order=\"0\"\r\n          iconMargin=\"r\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const isMorePage = this.props.movies.total_pages - this.props.movies.page;\r\n    const isBack = this.props.movies.page > 1 ? true : false;\r\n    const classMap = isBack\r\n      ? \"d-flex align-items-center  justify-content-between\"\r\n      : \"d-flex align-items-center justify-content-end\";\r\n    return (\r\n      <div className={classMap}>\r\n        {isBack ? this.renderBackBtn() : \"\"}\r\n        {isMorePage !== 0 ? this.renderNextBtn() : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  currentTap,\r\n  movies,\r\n  searchKeyword,\r\n  sortBy,\r\n  currentPage\r\n}) => {\r\n  return {\r\n    ...currentTap,\r\n    movies,\r\n    ...searchKeyword,\r\n    sortKey: sortBy,\r\n    page: currentPage\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    currentTap,\r\n    fetchMoviesReq,\r\n    searchKeyword,\r\n    sortBy,\r\n    currentPage,\r\n    fetchRecommendedMoviesRequest\r\n  }\r\n)(Pagination);\r\n","import React, { Component } from \"react\";\r\nimport \"./Sort.scss\";\r\nimport Select from \"react-select\";\r\nimport { connect } from \"react-redux\";\r\nimport { sortBy } from \"../../store/actions\";\r\n\r\nconst sortingList = [\r\n  { value: \"popularity.desc\", label: \"Popularity\" },\r\n  { value: \"vote_average.desc\", label: \"Votes Average\" },\r\n  { value: \"original_title.asc\", label: \"Title\" },\r\n  { value: \"release_date.desc\", label: \"Release Date\" }\r\n];\r\n\r\nclass Sort extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sortingList,\r\n      selected: sortingList[0]\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ selected: e }, () => {\r\n      this.props.sortBy(this.state.selected.value);\r\n      this.props.click(this.state.selected.value);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Select\r\n        value={this.state.selected}\r\n        options={this.state.sortingList}\r\n        className=\"sort mb-xs-40\"\r\n        theme={theme => ({\r\n          ...theme,\r\n          colors: {\r\n            ...theme.colors,\r\n            text: \"#263238\",\r\n            primary25: \"rgba(84, 110, 122, 0.3)\",\r\n            primary: \"#263238\"\r\n          }\r\n        })}\r\n        onChange={e => {\r\n          this.handleChange(e);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ sortBy }) => {\r\n  return { ...sortBy };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { sortBy }\r\n)(Sort);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  fetchRecommendedMoviesRequest,\r\n  fetchMoviesReq,\r\n  currentTap,\r\n  searchKeyword\r\n} from \"../../store/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Title from \"../../components/title/Title\";\r\nimport Card from \"../../components/card/Card\";\r\nimport Pagination from \"../../components/pagination/Pagination\";\r\nimport history from \"../../routes/History\";\r\nimport Sort from \"../../components/sort/Sort\";\r\nimport Empty from \"../../components/empty/Empty\";\r\n\r\nclass CardsGrid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleClick = sort => {\r\n    this.props.fetchMoviesReq(this.props.tap.api, {\r\n      page: this.props.page,\r\n      with_genres: this.props.tap.api ? \"\" : this.props.tap.id,\r\n      sort_by: sort ? sort : \"\"\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    switch (true) {\r\n      case this.props.type === \"person\":\r\n        this.props.fetchMoviesReq(\"\", {\r\n          page: history.location.search.split(\"=\")[1],\r\n          with_cast: history.location.pathname.replace(\"/person/\", \"\"),\r\n          with_genres: true\r\n        });\r\n        break;\r\n      case this.props.type === \"recommended\":\r\n        this.props.fetchRecommendedMoviesRequest(\r\n          history.location.pathname.replace(\"/\", \"\"),\r\n          {\r\n            page: history.location.search.split(\"=\")[1]\r\n          }\r\n        );\r\n        break;\r\n      default:\r\n        this.props.fetchMoviesReq(this.props.tap.api, {\r\n          // page: this.props.fetchRecommendedMoviesRequest\r\n          //   ? 1\r\n          //   : this.props.page || 1,\r\n          page: history.location.search.split(\"=\")[1],\r\n          with_genres: this.props.tap.api ? \"\" : this.props.tap.id\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { results, className, main, type } = this.props;\r\n    return (\r\n      <div className={className}>\r\n        <Title main={main || \"Recommended\"} sub={\"movies\"} />\r\n        {this.props.tap.api || this.props.search || type ? null : (\r\n          <Sort click={this.handleClick} />\r\n        )}\r\n        {results && results.length > 0 ? (\r\n          <React.Fragment>\r\n            <div className=\"grid-5 mx-auto\">\r\n              <Card list={results} />\r\n            </div>\r\n            <Pagination type={type} />\r\n          </React.Fragment>\r\n        ) : (\r\n          <Empty title=\"There are no movies...\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ movies, currentTap, searchKeyword }) => {\r\n  return { ...movies, ...currentTap, ...searchKeyword };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchRecommendedMoviesRequest, fetchMoviesReq, currentTap, searchKeyword }\r\n)(CardsGrid);\r\n","import React, { useState } from \"react\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport \"./Image.scss\";\r\nimport imageFail from \"../../assets/images/image-fail.png\";\r\n\r\nconst Image = ({ src }) => {\r\n  const [loaded, setLoading] = useState(false);\r\n  const handleLoading = () => {\r\n    setLoading(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!loaded ? <Spinner /> : null}\r\n      <div className={`image-wrapper ${!loaded ? \"d-none\" : \"\"}`}>\r\n        <img\r\n          src={src ? src : `${imageFail}`}\r\n          alt={src}\r\n          className={`image ${!loaded ? \"d-none\" : \"\"}`}\r\n          onLoad={() => handleLoading()}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\n\r\nconst Text = ({ title, p, className }) => {\r\n  return (\r\n    <div className={className}>\r\n      <h2 className=\"title mb-3\">{title}</h2>\r\n      <p>{p}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n"],"sourceRoot":""}