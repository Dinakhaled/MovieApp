{"version":3,"sources":["components/ListInline/ListInline.js","components/slider/Slider.js","containers/detailsPage/DetailsPage.js"],"names":["ListInline","props","className","onClick","handleClick","title","list","map","name","id","key","value","icon","faDotCircle","renderList","CircleSlider","state","display","renderSlides","profile_path","credit_id","background","backgroundImage","to","style","this","width","infinite","speed","slidesToShow","slidesToScroll","autoplay","responsive","breakpoint","settings","Component","DetailsPage","handleClickBack","history","goBack","openModal","setState","isVideoModalOpen","handleClickInlineList","e","values","target","split","currentTap","tap","parseInt","push","fetchMovieRequest","computedMatch","params","fetchCreditsRequest","prevProps","movie","poster_path","tagline","vote_average","spoken_languages","runtime","release_date","genres","overview","imdb_id","homepage","videos","credits","Container","fluid","PageTitle","Row","Col","lg","sm","Image","src","Title","size","main","sub","Rating","Rate","text","length","Text","p","href","rel","Button","faLink","iconMargin","order","theme","content","faImdb","results","faPlay","faArrowLeft","channel","isOpen","videoId","onClose","CardsGrid","type","connect","movies","cast"],"mappings":"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","file":"static/js/7.d1abda88.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { faDotCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./ListInline.scss\";\r\n\r\nconst renderList = props => {\r\n  return props.list.map(({ name, id }) => {\r\n    return (\r\n      <li\r\n        className=\"mr-4 title small-bold inline-list__item\"\r\n        key={id}\r\n        id={`${id},${name}`}\r\n        value={name}\r\n      >\r\n        <FontAwesomeIcon className=\"fontAwesome mr-2\" icon={faDotCircle} />\r\n        {name}\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nconst ListInline = props => {\r\n  return (\r\n    <div className={props.className} onClick={props.handleClick}>\r\n      <h2 className=\"title mb-3\">{props.title}</h2>\r\n      <ul className=\"p-0 list-unstyled d-flex inline-list\">\r\n        {renderList(props)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListInline;\r\n","import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Slider.scss\";\r\n\r\nclass CircleSlider extends Component {\r\n  state = {\r\n    display: true\r\n  };\r\n\r\n  renderSlides = () => {\r\n    return this.props.list.map(({ profile_path, credit_id, id }) => {\r\n      const background = {\r\n        backgroundImage: `url(${\r\n          profile_path\r\n            ? `https://image.tmdb.org/t/p/w342${profile_path}`\r\n            : \"../../assets/images/profile-fail.png\"\r\n        })`\r\n      };\r\n      return (\r\n        <Link to={`/person/${id}`} key={id}>\r\n          <div className=\"slider__slide\">\r\n            <div className=\"slider__img\" style={background}></div>\r\n          </div>\r\n        </Link>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const settings = {\r\n      infinite: false,\r\n      speed: 400,\r\n      slidesToShow: 9,\r\n      slidesToScroll: 1,\r\n      autoplay: true,\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 5\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 1440,\r\n          settings: {\r\n            slidesToShow: 6\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 796,\r\n          settings: {\r\n            slidesToShow: 8\r\n          }\r\n        }\r\n      ]\r\n    };\r\n    return (\r\n      <div className={this.props.className}>\r\n        <h2 className=\"title mb-3\">{this.props.title}</h2>\r\n        <div\r\n          style={{\r\n            width: this.state.width + \"px\",\r\n            display: this.state.display ? \"block\" : \"none\"\r\n          }}\r\n        >\r\n          <Slider className=\"slider\" {...settings}>\r\n            {this.renderSlides()}\r\n          </Slider>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CircleSlider;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  fetchMovieRequest,\r\n  fetchCreditsRequest,\r\n  currentTap\r\n} from \"../../store/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Image from \"../../components/image/Image\";\r\nimport Title from \"../../components/title/Title\";\r\nimport Rating from \"../../components/rating/Rating\";\r\nimport ListInline from \"../../components/ListInline/ListInline\";\r\nimport Text from \"../../components/text/Text\";\r\nimport Button from \"../../components/buttons/Button\";\r\nimport Slider from \"../../components/slider/Slider\";\r\nimport { faArrowLeft, faPlay, faLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faImdb } from \"@fortawesome/free-brands-svg-icons\";\r\nimport history from \"../../routes/History\";\r\nimport ModalVideo from \"react-modal-video\";\r\nimport CardsGrid from \"../CardsGrid/CardsGrid\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\n\r\nclass DetailsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isVideoModalOpen: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchMovieRequest(this.props.computedMatch.params.id);\r\n    this.props.fetchCreditsRequest(this.props.computedMatch.params.id);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.computedMatch.params.id !== this.props.computedMatch.params.id\r\n    ) {\r\n      this.props.fetchMovieRequest(this.props.computedMatch.params.id);\r\n      this.props.fetchCreditsRequest(this.props.computedMatch.params.id);\r\n    }\r\n  }\r\n\r\n  handleClickBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  openModal = () => {\r\n    this.setState({ isVideoModalOpen: true });\r\n  };\r\n\r\n  handleClickInlineList = e => {\r\n    const values = e.target.id.split(\",\");\r\n    this.props.currentTap({\r\n      tap: { id: parseInt(values[0], 10), name: values[1] }\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      poster_path,\r\n      title,\r\n      tagline,\r\n      vote_average,\r\n      spoken_languages,\r\n      runtime,\r\n      release_date,\r\n      genres,\r\n      overview,\r\n      imdb_id,\r\n      homepage,\r\n      videos\r\n    } = this.props.movie;\r\n    const { credits } = this.props;\r\n    return (\r\n      <Container fluid>\r\n        <PageTitle title={title} />\r\n        <Row className=\"px-xs-0 align-items-center\">\r\n          <Col lg={5} sm={12}>\r\n            <Image\r\n              src={\r\n                poster_path\r\n                  ? `https://image.tmdb.org/t/p/w780${poster_path}`\r\n                  : `../../assets/images/image-fail.png`\r\n              }\r\n            />\r\n          </Col>\r\n          <Col lg={6} sm={12}>\r\n            <Title size=\"lg\" main={title} sub={tagline} />\r\n            <div className=\"d-flex justify-content-between align-items-center flex-wrap mb-lg-20 mb-xl-60 mb-xs-40\">\r\n              <Rating\r\n                Rate={(vote_average / 10) * 5}\r\n                text={vote_average}\r\n                className=\"mr-xs-20 mb-xs-10\"\r\n              />\r\n              <h3 className=\"text-light title\">\r\n                {spoken_languages &&\r\n                  spoken_languages.length > 0 &&\r\n                  spoken_languages[0].name}{\" \"}\r\n                / {runtime} min. / {release_date && release_date.split(\"-\")[0]}\r\n              </h3>\r\n            </div>\r\n            {genres && genres.length > 0 && (\r\n              <ListInline\r\n                list={genres || []}\r\n                title=\"The Genres\"\r\n                className=\"mb-xs-40\"\r\n                handleClick={e => this.handleClickInlineList(e)}\r\n              />\r\n            )}\r\n            {overview && (\r\n              <Text title=\"The Synopsis\" p={overview} className=\"mb-xs-40\" />\r\n            )}\r\n            {credits && credits.length > 0 && (\r\n              <Slider\r\n                list={credits || []}\r\n                title=\"the cast\"\r\n                className=\"mb-xs-40\"\r\n              />\r\n            )}\r\n            <div className=\"d-flex justify-content-between align-items-start\">\r\n              <div className=\"d-flex flex-wrap\">\r\n                {homepage && (\r\n                  <a href={homepage} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                    <Button\r\n                      className=\"mr-4 mb-3\"\r\n                      icon={faLink}\r\n                      iconMargin=\"l\"\r\n                      order=\"1\"\r\n                      theme=\"outline-primary\"\r\n                      content=\"Website\"\r\n                    />\r\n                  </a>\r\n                )}\r\n                <a\r\n                  href={`https://www.imdb.com/title/${imdb_id}`}\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <Button\r\n                    className=\"mr-4 mb-3\"\r\n                    icon={faImdb}\r\n                    iconMargin=\"l\"\r\n                    order=\"1\"\r\n                    theme=\"outline-primary\"\r\n                    content=\"IMDB\"\r\n                  />\r\n                </a>\r\n                {videos && videos.results.length > 0 && (\r\n                  <Button\r\n                    className=\"mb-3\"\r\n                    icon={faPlay}\r\n                    iconMargin=\"l\"\r\n                    order=\"1\"\r\n                    theme=\"outline-primary\"\r\n                    content=\"Trailer\"\r\n                    handleClick={this.openModal}\r\n                  />\r\n                )}\r\n              </div>\r\n              <Button\r\n                content=\"Back\"\r\n                iconMargin=\"r\"\r\n                icon={faArrowLeft}\r\n                handleClick={this.handleClickBack}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {videos && videos.results.length > 0 && (\r\n          <ModalVideo\r\n            channel=\"youtube\"\r\n            isOpen={this.state.isVideoModalOpen}\r\n            videoId={videos && videos.results[0].key}\r\n            onClose={() => this.setState({ isVideoModalOpen: false })}\r\n          />\r\n        )}\r\n        <CardsGrid type=\"recommended\" className=\"mt-xs-60\" />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ movies, credits }) => {\r\n  return { movie: movies, credits: credits.cast };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchMovieRequest, fetchCreditsRequest, currentTap }\r\n)(DetailsPage);\r\n"],"sourceRoot":""}